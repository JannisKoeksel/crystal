## expect(errors).toBeFalsy()
## expect(data.forums).toHaveLength(1);
## expect(data.forums[0].messagesList).toHaveLength(2);
## expect(data.forums[0].messagesList[0].featured).toBe(false);
## expect(data.forums[0].messagesList[1].featured).toBe(false);
#> variableValues: {"some": { "featured": { "equalTo": true } }, "featured": { notEqualTo: true } }
# NOTE: This query should return the same data as `complex-filter.test.graphql`
query NonFeaturedMessagesInForumsWithFeaturedMessage(
  $some: MessageFilter
  $featured: BooleanFilter
  $isArchived: BooleanFilter
) {
  forums(filter: { messages: { some: $some } }) {
    name
    messagesList(filter: { featured: $featured, isArchived: $isArchived }) {
      body
      featured
    }
  }
}
